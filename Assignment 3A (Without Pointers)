				ASSIGNMENT NO.3(Part A-without pointers)
	TITLE:Implement following operations on string with / without 			pointers (without using library functions) 
		i. Length 
		ii. Palindrome 
		iii. String comparison 
		iv. Copy 
		v. Reverse 
		vi. Substring 

#include<stdio.h>
#include<ctype.h>
voidlen(char str1[],char str2[]);
void palindrome(char str1[]);
void compare(char str1[],char str2[]);
void copy(char str1[]);
void reverse(char str1[]);
void substring(char str1[]);
void main()
{
	char str1[100],str2[100];
	intch,i;
	printf("\n Enter the first string=");
	scanf("%s",&str1);
	printf("\n Enter the second string=");
	scanf("%s",&str2);
	do
	{
		printf("\n1.length 2.palindrome 3.compare 4.copy 5.reverse 6.substring");
		printf("\nEnter your choice=");
		scanf("%d",&ch);
		switch(ch)
		{
			case 1:len(str1,str2);
				break;
			case 2:palindrome(str1);
				break;	
			case 3:compare(str1,str2);
				break;
			case 4:copy(str1);
				break;
			case 5:reverse(str1);
				break;
			case 6:substring(str1);
				break;
			default:printf("\nInvalid choice");
				break;
		}
	}while(ch!=0);
}
voidlen(char str1[],char str2[])
{
	int i,j,length1=0,length2=0;
	while(str1[i]!='\0')
	{
		length1++;
		i++;
	}
	printf("\n length of 1st string is= %d",length1);
	while(str2[j]!='\0')
	{
		length2++;
		j++;
	}
	printf("\n length of 2nd string is= %d",length2);	
}
void palindrome(char str1[])
{
	int i=0,j=0,f=0;
	while(str1[j]!='\0')
	{
		j++;
	}
	j--;
	while(str1[j]!='\0')
	{
		if(str1[i]!=str1[j])
		{
			f=1;
		}
		i++;
		j--;
	}
	if(f==0)
	{
		printf("\n String is palindrome");
	}
	else
	{
		printf("\n String is not palindrome");
	}
}
void compare(char str1[],char str2[])
{
	int i,f1=0;
	for(i=0;str1[i]!='\0'&&str2[i]!='\0';i++)
	{	
		if(str1[i]==str2[i])
		{	
			f1=1;
		}
		else
		{
			f1=0;
		}
	}
	if(f1)
	{
		printf("\nTwo strings are equal");
	}
	else
	{
		printf("\nTwo strings are not equal");
	}
}
void copy(char str1[])
{
	int i;
	char str2[100]; 
	for(i=0;str1[i]!='\0';i++)
	{
		str2[i]=str1[i];
	}
	printf("\nCopied string is =%s",str2);
}
void reverse(char str1[])
{
	int i=0,j=0;
	while(str1[i]!='\0')
	{
		i++;
	}
	
	while(i>=0)
	{
		printf("%c",str1[i]);
		i--;
	}
	printf("= is reversed string ");
}
void substring(char str1[])
{	
	char str2[100];
	printf("\nEnter substring you want to find=");
	scanf("%s",str2);
	int i=0,j=0,f1=0,a=0,b=0;
	while(str1[i]!='\0')
	i++;
	i--;
	while(str2[j]!='\0')
	j++;
	j--;

	for(a=0;a<=i-j;a++)
	{
		for(b=a;b<a+j;b++)
		{
			f1=1;
			if(str1[b]!=str2[b-a])
			{
				f1=0;
				break;
			}
			
		}
		if(f1==1)
		{
			break;	
		}
	}
	if(f1)
	{
		printf("\nSecond string is a substring of 1st");
	}
	else
	{
		printf("\nSecond string is not a substring of 1st");
	}
}

